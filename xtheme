#!/bin/bash

# author: stackiller

declare -a temas;
temas_Dir="$HOME/.x_themes";
default_Xresources="$HOME/.x_themes/default.theme";
current_theme="$HOME/.x_themes/current.theme";

# colors.
red="\e[38;5;160m"
green="\e[38;5;84m"
blue="\e[38;5;87m"
yellow="\e[38;5;190m"
pink="\e[38;5;198m"
bold="\e[1m"
reset="\e[0m"

# alias for echo function.
function eco() {
  str=$1;
  if [[ -n $str ]]; then
    echo -e $str;
  fi;
}

# define the theme.
function setTheme() {
  temas_length=$((${#temas[@]} - 1));
  
  if [ $1 -lt 0 ] || [ $1 -gt $temas_length ]; then
    showThemes;
  else
    eco "${bold}${green}Defining theme${reset} => ${temas[$1]}";
    xrdb -override $default_Xresources;
    echo $temas_Dir/${temas[$1]};
    xrdb -merge "$temas_Dir/${temas[$1]}";
    echo "! ${temas[$1]}" > "$current_theme";
    xrdb -query >> "$current_theme";
    xrdb -query > "$HOME/.Xresources";
  fi;
}

# shows available themes.
function showThemes() {
  i=0;
  eco "${bold}Available themes:${reset}";
  for tema in ${temas[@]}; do
    echo "|_ $i => ${temas[$i]}";
    i=$((i+1));
  done;
}

# get the available themes.
function getThemes() {
  i=0;
  for tema in $temas_Dir/*; do
    renamed_tema=`basename "$tema" | sed 's/[[:space:]]/-/g'`;
    
    if [[ $tema != "$temas_Dir/$renamed_tema" ]]; then
      mv "$tema" "$temas_Dir/$renamed_tema";
    fi;

    if [[ ! ( $renamed_tema = "default.theme" || $renamed_tema = "current.theme" ) ]]; then
      temas[$i]=$renamed_tema;
      i=$((i+1));
    fi;
  done;
}

# main function, like c ? xD
function main() {
  argc=${#@};
  declare -i tema_index;
  getThemes;
  
  if [ $argc -lt 1 ] || [ $argc -gt 1 ];
  then
    eco "${bold}Please specify only one theme index:${reset}";
    showThemes;
  else
    tema_index=$1;
    setTheme $tema_index;
  fi;
}

# auto call;
main $@;
